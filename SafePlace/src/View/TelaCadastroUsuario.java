/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controllers.UsuarioController;
import Dto.Request.CadastroUsuarioRequestDto;
import Models.UsuarioModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ingrid
 */
public class TelaCadastroUsuario extends javax.swing.JFrame {

    /**
     * Creates new form TelaFuncionario
     */
    private static UsuarioController _usuarioController = new UsuarioController();

    public TelaCadastroUsuario() {
        super("Cadastro de Usuário");
        initComponents();
        setLocationRelativeTo(null);

        this.atualizarLista();
    }

    public void atualizarLista() {
        try {
            cboxUsuariosCadastrados.setModel(new DefaultComboBoxModel<>(_usuarioController.montarListaUsuario()));
            passwordFieldSenha.setText("");
            txtCadastroNomeUsuario.setText("");

            _usuarioController.setUsuario(null);
            this.habilitarDesabilitarBotoes(false);
        } catch (Exception ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean camposPreenchidos() {
        if (passwordFieldSenha.getText().equals("")
                && txtCadastroNomeUsuario.getText().equals("")) {
            return false;
        }
        return true;
    }

    public void habilitarDesabilitarBotoes(boolean enabled) {
        if (enabled) {
            btnApagarFuncionario.setEnabled(true);
            btnEditarFuncionario.setEnabled(true);
            lblAcessoBotoes.setText("");
        } else {
            btnApagarFuncionario.setEnabled(false);
            btnEditarFuncionario.setEnabled(false);
            lblAcessoBotoes.setText("Selecione um Usuário para Editar/Apagar");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCadastroNomeUsuario = new javax.swing.JTextField();
        passwordFieldSenha = new javax.swing.JPasswordField();
        cboxTipoUsuario = new javax.swing.JComboBox<>();
        cboxUsuariosCadastrados = new javax.swing.JComboBox<>();
        btnCadastroFuncionario = new javax.swing.JButton();
        btnApagarFuncionario = new javax.swing.JButton();
        btnVoltarCadastroFuncionario = new javax.swing.JButton();
        btnEditarFuncionario = new javax.swing.JButton();
        lblAcessoBotoes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCadastroNomeUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do funcionário: "));

        passwordFieldSenha.setBorder(javax.swing.BorderFactory.createTitledBorder("Senha:"));

        cboxTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "USER" }));
        cboxTipoUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de usuário:"));
        cboxTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTipoUsuarioActionPerformed(evt);
            }
        });

        cboxUsuariosCadastrados.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuários Cadastrados:"));
        cboxUsuariosCadastrados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxUsuariosCadastradosItemStateChanged(evt);
            }
        });
        cboxUsuariosCadastrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxUsuariosCadastradosActionPerformed(evt);
            }
        });

        btnCadastroFuncionario.setText("Cadastrar");
        btnCadastroFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroFuncionarioActionPerformed(evt);
            }
        });

        btnApagarFuncionario.setText("Apagar");
        btnApagarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarFuncionarioActionPerformed(evt);
            }
        });

        btnVoltarCadastroFuncionario.setText("Voltar");
        btnVoltarCadastroFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCadastroFuncionarioActionPerformed(evt);
            }
        });

        btnEditarFuncionario.setText("Editar");
        btnEditarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarFuncionarioActionPerformed(evt);
            }
        });

        lblAcessoBotoes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAcessoBotoes.setForeground(new java.awt.Color(0, 51, 255));
        lblAcessoBotoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(passwordFieldSenha)
                    .addComponent(cboxTipoUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(txtCadastroNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVoltarCadastroFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxUsuariosCadastrados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCadastroFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnApagarFuncionario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAcessoBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(cboxUsuariosCadastrados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtCadastroNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(passwordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(cboxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastroFuncionario)
                    .addComponent(btnEditarFuncionario))
                .addGap(10, 10, 10)
                .addComponent(btnApagarFuncionario)
                .addGap(20, 20, 20)
                .addComponent(btnVoltarCadastroFuncionario)
                .addGap(18, 18, 18)
                .addComponent(lblAcessoBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboxTipoUsuario, cboxUsuariosCadastrados, passwordFieldSenha, txtCadastroNomeUsuario});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastroFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroFuncionarioActionPerformed
        CadastroUsuarioRequestDto request = new CadastroUsuarioRequestDto();
        
        if (this.camposPreenchidos()) {
            String nomeUsuario = txtCadastroNomeUsuario.getText();
            String senhaUsuario = passwordFieldSenha.getText();
            
            if (!nomeUsuario.matches("[a-zA-Z]{5,40}")) {
                JOptionPane.showMessageDialog(null, "O nome do usuário deve conter apenas letras e ser entre 5 e 40 caracteres!!");
                return;
            }
            if (!senhaUsuario.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$")) {
                JOptionPane.showMessageDialog(null, "A senha deve conter no mínimo 8 caracteres, incluindo uma letra maiúscula, uma letra minúscula, um número e um caractere especial!");
                return;
            }
            
            request.setLogin(txtCadastroNomeUsuario.getText());
            request.setSenha(passwordFieldSenha.getText());
            request.setTipo(cboxTipoUsuario.getSelectedItem().toString());

            JOptionPane.showMessageDialog(null, _usuarioController.cadastrarUsuario(request));
            if (!_usuarioController.erroReq) {
                atualizarLista();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Favor, preencher os campos adequadamente!");
        }
    }//GEN-LAST:event_btnCadastroFuncionarioActionPerformed

    private void btnVoltarCadastroFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCadastroFuncionarioActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarCadastroFuncionarioActionPerformed

    private void btnApagarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarFuncionarioActionPerformed
        UsuarioModel user = (UsuarioModel) cboxUsuariosCadastrados.getSelectedItem();
        _usuarioController.setUsuario(user);

        JOptionPane.showMessageDialog(null, _usuarioController.deletarUsuario());
        if (!_usuarioController.erroReq)
            atualizarLista();
    }//GEN-LAST:event_btnApagarFuncionarioActionPerformed

    private void btnEditarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarFuncionarioActionPerformed
        UsuarioModel user = (UsuarioModel) cboxUsuariosCadastrados.getSelectedItem();

        if (this.camposPreenchidos()) {
            String nomeUsuario = txtCadastroNomeUsuario.getText();
            String senhaUsuario = passwordFieldSenha.getText();
            
            if (!nomeUsuario.matches("[a-zA-Z]{5,40}")) {
                JOptionPane.showMessageDialog(null, "O nome do usuário deve conter apenas letras e ser entre 5 e 40 caracteres!!");
                return;
            }
            if (!senhaUsuario.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$")) {
                JOptionPane.showMessageDialog(null, "A senha deve conter no mínimo 8 caracteres, incluindo uma letra maiúscula, uma letra minúscula, um número e um caractere especial!");
                return;
            }
            
            user.setLogin(txtCadastroNomeUsuario.getText());
            user.setSenha(passwordFieldSenha.getText());
            user.setTipo(cboxTipoUsuario.getSelectedItem().toString());

            _usuarioController.setUsuario(user);

            JOptionPane.showMessageDialog(null, _usuarioController.atualizarUsuario());

            if (!_usuarioController.erroReq) {
                atualizarLista();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Favor, preencher os campos adequadamente!");
        }
    }//GEN-LAST:event_btnEditarFuncionarioActionPerformed

    private void cboxTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTipoUsuarioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cboxTipoUsuarioActionPerformed

    private void cboxUsuariosCadastradosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxUsuariosCadastradosItemStateChanged
        UsuarioModel usuario = (UsuarioModel) cboxUsuariosCadastrados.getSelectedItem();

        txtCadastroNomeUsuario.setText(usuario.getLogin());
        passwordFieldSenha.setText(usuario.getSenha());
        cboxTipoUsuario.setSelectedItem(usuario.getTipo());

        _usuarioController.setUsuario(usuario);
        this.habilitarDesabilitarBotoes(true);
    }//GEN-LAST:event_cboxUsuariosCadastradosItemStateChanged

    private void cboxUsuariosCadastradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxUsuariosCadastradosActionPerformed
        UsuarioModel usuario = (UsuarioModel) cboxUsuariosCadastrados.getSelectedItem();

        txtCadastroNomeUsuario.setText(usuario.getLogin());
        passwordFieldSenha.setText(usuario.getSenha());
        cboxTipoUsuario.setSelectedItem(usuario.getTipo());

        _usuarioController.setUsuario(usuario);
        this.habilitarDesabilitarBotoes(true);
    }//GEN-LAST:event_cboxUsuariosCadastradosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagarFuncionario;
    private javax.swing.JButton btnCadastroFuncionario;
    private javax.swing.JButton btnEditarFuncionario;
    private javax.swing.JButton btnVoltarCadastroFuncionario;
    private javax.swing.JComboBox<String> cboxTipoUsuario;
    private javax.swing.JComboBox<UsuarioModel> cboxUsuariosCadastrados;
    private javax.swing.JLabel lblAcessoBotoes;
    private javax.swing.JPasswordField passwordFieldSenha;
    private javax.swing.JTextField txtCadastroNomeUsuario;
    // End of variables declaration//GEN-END:variables
}
